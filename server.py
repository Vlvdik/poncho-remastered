import asyncio
import re
import vk_api
import methods
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from config import *

authorize = vk_api.VkApi(token = main_token)
longpoll = VkBotLongPoll(authorize, group_id)

### –ú–µ—Ç–æ–¥—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –í–ö
async def write_msg(sender, message):
    authorize.method('messages.send', {'chat_id': sender, 'message': message, 'random_id': 0})

### –í—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ –ª—É–ø
async def main():
    for event in longpoll.listen():
        try:
            await event_handle(event)
        except:
            print("Error_log: [Handle error]")

### –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ç—É—Ç, –≤ —Ç–æ–º —á–∏—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–≤–µ–Ω—Ç–æ–≤
async def event_handle(event):    
    if event.type == VkBotEventType.MESSAGE_NEW and event.from_chat and event.message.get('text') != "":
        
        msg = event.message.get('text').lower()
        words = event.message.get('text').lower().split()
        chat = event.chat_id
        user_id = event.message.get('from_id')

        ### –õ–æ–≥–∏
        print('Chat_id: [' + str(chat) + ']\nUser_id: [' + str(user_id) + ']\nMessage: [' + msg + ']')

        if msg == '/–≥–æ—Ä–æ—Å–∫–æ–ø':
            await write_msg(chat, '–£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ üë∫')
        elif words[0] == '/–≥–æ—Ä–æ—Å–∫–æ–ø':
            if words[1] in zodiac_signs:
                await write_msg(chat, methods.parse_horoscope(words[1]))
            else:
                await write_msg(chat, '–ú–æ–∏–º–∏ –ª–∞–ø–∞–º–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ–¥–æ–±–Ω—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ üòø') 
    
        if words[0] == '/—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
            if msg == words[0] or len(words) == 2:
                await write_msg(chat, '–£–∫–∞–∂–∏—Ç–µ –ö–£–†–° –∏ –ì–†–£–ü–ü–£!')
            else:
                await write_msg(chat, methods.parse_schedule(words[1], words[2]))

asyncio.run(main())
